[
  {
    "objectID": "Tuto1.html",
    "href": "Tuto1.html",
    "title": "Tuto1",
    "section": "",
    "text": "To install Cran R, you must go to https://cran.r-project.org/, and download the exe for your favorite operating system, click on the .exe, .dmg, .pkg, .deb, respectively for Windows, MacOS and Linux-debian.\nAnd click on follow… until to reach successful installation Then download and install the IDE Rstudio clik here.\nEverything is free to download\n\n\n\nWhere I am ?\n\ngetwd()\n\n[1] \"/Users/marcgarel/Documents/quarto2\"\n\n\nHow can I change my working directory in command line\n\nsetwd(\"/Users/marcgarel/OSU/Cours_R/\")\n\nOn Rstudio, we can change of working directory by navigating in folder in File panel and clicking on menu More\nHow can I find documentation about function?\nThe command help() is the 911\n\n# exemple with function read.table\nhelp(\"read.table\")\n#other exemple of 911\nexample(\"plot\")\n??plot()"
  },
  {
    "objectID": "Tuto1.html#i-how-to-install-r",
    "href": "Tuto1.html#i-how-to-install-r",
    "title": "Tuto1",
    "section": "",
    "text": "To install Cran R, you must go to https://cran.r-project.org/, and download the exe for your favorite operating system, click on the .exe, .dmg, .pkg, .deb, respectively for Windows, MacOS and Linux-debian.\nAnd click on follow… until to reach successful installation Then download and install the IDE Rstudio clik here.\nEverything is free to download\n\n\n\nWhere I am ?\n\ngetwd()\n\n[1] \"/Users/marcgarel/Documents/quarto2\"\n\n\nHow can I change my working directory in command line\n\nsetwd(\"/Users/marcgarel/OSU/Cours_R/\")\n\nOn Rstudio, we can change of working directory by navigating in folder in File panel and clicking on menu More\nHow can I find documentation about function?\nThe command help() is the 911\n\n# exemple with function read.table\nhelp(\"read.table\")\n#other exemple of 911\nexample(\"plot\")\n??plot()"
  },
  {
    "objectID": "Tuto1.html#ii-how-to-install-new-package",
    "href": "Tuto1.html#ii-how-to-install-new-package",
    "title": "Tuto1",
    "section": "II-How to install new package?",
    "text": "II-How to install new package?\n\nPackages intallation\nTwo ways for installing new packages by clicking directly in Rstudio or by command line (the best way for me)\n\ninstall.packages(\"your package\") # for packages on CRAN mirror\n\nFor the packages on Bioconductor (specifically for bioinformatic) or package from github\n\nBiocManager::install(\"your packages\") # for bioconductor\n\ndevtools::install_github(\"your package\") # need to previously install devtools package\n\n\n\nLoad pacakge to use funtion inside\n\n# First solution : need to create a session with all necessary packages\nlibrary(\"your package1\")\nlibrary(\"your package2\")\nlibrary(\"your package3\")\n\n\n#Or without load the package using this command your package::yourfunction()\ndada2::mergePairs()\n\nOn your R session using cloud IFB all the necessary packages are installed"
  },
  {
    "objectID": "Tuto1.html#iii-expression-and-affectation",
    "href": "Tuto1.html#iii-expression-and-affectation",
    "title": "Tuto1",
    "section": "III-Expression and Affectation",
    "text": "III-Expression and Affectation"
  },
  {
    "objectID": "Tuto1.html#expression",
    "href": "Tuto1.html#expression",
    "title": "Tuto1",
    "section": "Expression",
    "text": "Expression\nExpression is directly evaluated by R and the result is displayed on terminal Example :\n\n2+3\nsqrt(25)"
  },
  {
    "objectID": "Tuto1.html#affectation-in-object",
    "href": "Tuto1.html#affectation-in-object",
    "title": "Tuto1",
    "section": "Affectation in object",
    "text": "Affectation in object\nAn assignment is an expression (mathematical operation, vector, matrix, data.frame, list) stored in object. To store expression in object, we choose a simple name, and we use = or &lt;- to store value inside the object.\nExample :\n\na=2+3\nb=\"madame\"\n\n What happens when you execute this cell?\n\na\n\n[1] 5\n\nb\n\n[1] \"madame\"\n\n\n\na=10\nb=\"5\"\nsomme&lt;-a+b\n\n Why do we have an error ? I need to know the type of the object\n\nstr(a)\nstr(b)\n\n What kind of information do we get?\nWe can also perform mathematical operations on numerical objects.\n\nlog(a) # to obtain the logarithm of a\n\n[1] 1.609438\n\nsqrt(a)# to obtain the square root of a\n\n[1] 2.236068\n\n\n\n# we can compare it\nlog(a)&gt;sqrt(a)\n\n[1] FALSE"
  },
  {
    "objectID": "Tuto1.html#different-type-of-object",
    "href": "Tuto1.html#different-type-of-object",
    "title": "Tuto1",
    "section": "Different type of object",
    "text": "Different type of object\n\nThe vector\nThe vectors is an object composed by value with the same mode (i.e, numeric, characters…)\n\nV1&lt;-c(2,6,9) # numeric vector\nV2&lt;-c(\"monday\",\"Tuesday\",\"Wednesday\")# character vector\nV3&lt;-rep(6, 3) # repetition of the same value\nV4=seq(1,3,0.1)\nV5=c(1:100)\nV5\n\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100\n\n# sequence of number\n# to know the number of value inside a vector\nlength(V1)\n\n[1] 3\n\n# continue with other Vector\n# What do you think in V4?\n\n\n#Filtering a vector according to criteria\n# Example : with list of value (a vector)\n\nx = c(1,3,5,3,2,1,4,6,4,7,5,4,3)\n\n# get element from 2 to 6\n\nx[2:6]\n\n[1] 3 5 3 2 1\n\n# get elements 3 et 5 from x.\n\nx[c(3,5)]\n\n[1] 5 2\n\n# get value more than 5.\n\nx[x&gt;5]\n\n[1] 6 7\n\n# get value of  x where x is equal to 5.\n\nx[x==5]\n\n[1] 5 5\n\n# return elements form x the the value different from 5\n\nx[x!=5] \n\n [1] 1 3 3 2 1 4 6 4 7 4 3\n\n\n\n#Filter a vector according to several criteria\n\n# 3 lists : ages, sexes et poids\n\nage = c(20,30,40,15,22,24,36,38)\n\nsexe = c(\"F\",\"M\",\"F\",\"M\",\"F\",\"M\",\"F\",\"M\")\n\npoids =c(75,76,73,72,64,76,73,72)\n\n# get value from age greater than 20 and less than 30.\n\nage[age&gt;20&age&lt;30]\n\n[1] 22 24\n\n# Recovering \"poids\" for those who are older than 25 and female\n\npoids[age&gt;25&sexe==\"F\"]\n\n[1] 73 73\n\n#Retrieve age values below 20 or above 30.\n\nage[age&lt;20|age&gt;30]\n\n[1] 40 15 36 38\n\n\nExo1\nThis is the vector a=c(“lannister”, “targaryen”, “baratheon”, “starck”, “greyjoy”)\n\nWhat is the length of the vector?\nTry doing a [1:3]. What do you get?\nCreate a new vector b containing only lannister and starck.\nTry doing a[-1]. What do you get?\nSort by alphabetical order. clue: sort ?\n\nExo2\n\nCreate a vector a containing all integers from 1 to 100.\nAdd the values 200, 201, 202 to the vector a.\nCreate a vector b containing all even integers from 2 to 100. clue : seq?\n\n\nData frame\nThe data frame is an object composed by vector where the value are [in the different mode}{style=“color: steelblue;”} (i.e, numeric, characters…)\n\nExemple of data frame\n\nlibrary(datasets) #load packages with example of datasets\ndata(iris) #loads data frame\nstr(iris) # return the different type of vector\n\n'data.frame':   150 obs. of  5 variables:\n $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n\nView(iris) # view data frame in a table\n\n\n# Get value inside data.frame\niris[3] # to get 3rd value from the first line \n\n    Petal.Length\n1            1.4\n2            1.4\n3            1.3\n4            1.5\n5            1.4\n6            1.7\n7            1.4\n8            1.5\n9            1.4\n10           1.5\n11           1.5\n12           1.6\n13           1.4\n14           1.1\n15           1.2\n16           1.5\n17           1.3\n18           1.4\n19           1.7\n20           1.5\n21           1.7\n22           1.5\n23           1.0\n24           1.7\n25           1.9\n26           1.6\n27           1.6\n28           1.5\n29           1.4\n30           1.6\n31           1.6\n32           1.5\n33           1.5\n34           1.4\n35           1.5\n36           1.2\n37           1.3\n38           1.4\n39           1.3\n40           1.5\n41           1.3\n42           1.3\n43           1.3\n44           1.6\n45           1.9\n46           1.4\n47           1.6\n48           1.4\n49           1.5\n50           1.4\n51           4.7\n52           4.5\n53           4.9\n54           4.0\n55           4.6\n56           4.5\n57           4.7\n58           3.3\n59           4.6\n60           3.9\n61           3.5\n62           4.2\n63           4.0\n64           4.7\n65           3.6\n66           4.4\n67           4.5\n68           4.1\n69           4.5\n70           3.9\n71           4.8\n72           4.0\n73           4.9\n74           4.7\n75           4.3\n76           4.4\n77           4.8\n78           5.0\n79           4.5\n80           3.5\n81           3.8\n82           3.7\n83           3.9\n84           5.1\n85           4.5\n86           4.5\n87           4.7\n88           4.4\n89           4.1\n90           4.0\n91           4.4\n92           4.6\n93           4.0\n94           3.3\n95           4.2\n96           4.2\n97           4.2\n98           4.3\n99           3.0\n100          4.1\n101          6.0\n102          5.1\n103          5.9\n104          5.6\n105          5.8\n106          6.6\n107          4.5\n108          6.3\n109          5.8\n110          6.1\n111          5.1\n112          5.3\n113          5.5\n114          5.0\n115          5.1\n116          5.3\n117          5.5\n118          6.7\n119          6.9\n120          5.0\n121          5.7\n122          4.9\n123          6.7\n124          4.9\n125          5.7\n126          6.0\n127          4.8\n128          4.9\n129          5.6\n130          5.8\n131          6.1\n132          6.4\n133          5.6\n134          5.1\n135          5.6\n136          6.1\n137          5.6\n138          5.5\n139          4.8\n140          5.4\n141          5.6\n142          5.1\n143          5.1\n144          5.9\n145          5.7\n146          5.2\n147          5.0\n148          5.2\n149          5.4\n150          5.1\n\niris[3,4] # data[line, column]\n\n[1] 0.2\n\niris[5:10,2:4] # to get value from the line 5 to 10  for the columns/variables 2 to 4\n\n   Sepal.Width Petal.Length Petal.Width\n5          3.6          1.4         0.2\n6          3.9          1.7         0.4\n7          3.4          1.4         0.3\n8          3.4          1.5         0.2\n9          2.9          1.4         0.2\n10         3.1          1.5         0.1\n\niris[5:10,]  # to get value from the line 5 to 10 for all  columns\n\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n5           5.0         3.6          1.4         0.2  setosa\n6           5.4         3.9          1.7         0.4  setosa\n7           4.6         3.4          1.4         0.3  setosa\n8           5.0         3.4          1.5         0.2  setosa\n9           4.4         2.9          1.4         0.2  setosa\n10          4.9         3.1          1.5         0.1  setosa\n\niris[,3] # to all lines form third column (or vector)\n\n  [1] 1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 1.5 1.6 1.4 1.1 1.2 1.5 1.3 1.4\n [19] 1.7 1.5 1.7 1.5 1.0 1.7 1.9 1.6 1.6 1.5 1.4 1.6 1.6 1.5 1.5 1.4 1.5 1.2\n [37] 1.3 1.4 1.3 1.5 1.3 1.3 1.3 1.6 1.9 1.4 1.6 1.4 1.5 1.4 4.7 4.5 4.9 4.0\n [55] 4.6 4.5 4.7 3.3 4.6 3.9 3.5 4.2 4.0 4.7 3.6 4.4 4.5 4.1 4.5 3.9 4.8 4.0\n [73] 4.9 4.7 4.3 4.4 4.8 5.0 4.5 3.5 3.8 3.7 3.9 5.1 4.5 4.5 4.7 4.4 4.1 4.0\n [91] 4.4 4.6 4.0 3.3 4.2 4.2 4.2 4.3 3.0 4.1 6.0 5.1 5.9 5.6 5.8 6.6 4.5 6.3\n[109] 5.8 6.1 5.1 5.3 5.5 5.0 5.1 5.3 5.5 6.7 6.9 5.0 5.7 4.9 6.7 4.9 5.7 6.0\n[127] 4.8 4.9 5.6 5.8 6.1 6.4 5.6 5.1 5.6 6.1 5.6 5.5 4.8 5.4 5.6 5.1 5.1 5.9\n[145] 5.7 5.2 5.0 5.2 5.4 5.1\n\niris$Petal.Length # to all lines form Petal.Length vecotor\n\n  [1] 1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 1.5 1.6 1.4 1.1 1.2 1.5 1.3 1.4\n [19] 1.7 1.5 1.7 1.5 1.0 1.7 1.9 1.6 1.6 1.5 1.4 1.6 1.6 1.5 1.5 1.4 1.5 1.2\n [37] 1.3 1.4 1.3 1.5 1.3 1.3 1.3 1.6 1.9 1.4 1.6 1.4 1.5 1.4 4.7 4.5 4.9 4.0\n [55] 4.6 4.5 4.7 3.3 4.6 3.9 3.5 4.2 4.0 4.7 3.6 4.4 4.5 4.1 4.5 3.9 4.8 4.0\n [73] 4.9 4.7 4.3 4.4 4.8 5.0 4.5 3.5 3.8 3.7 3.9 5.1 4.5 4.5 4.7 4.4 4.1 4.0\n [91] 4.4 4.6 4.0 3.3 4.2 4.2 4.2 4.3 3.0 4.1 6.0 5.1 5.9 5.6 5.8 6.6 4.5 6.3\n[109] 5.8 6.1 5.1 5.3 5.5 5.0 5.1 5.3 5.5 6.7 6.9 5.0 5.7 4.9 6.7 4.9 5.7 6.0\n[127] 4.8 4.9 5.6 5.8 6.1 6.4 5.6 5.1 5.6 6.1 5.6 5.5 4.8 5.4 5.6 5.1 5.1 5.9\n[145] 5.7 5.2 5.0 5.2 5.4 5.1\n\n\n\n\nHow to build your own data frame\n\ndate&lt;-c(\"1_monday\",\"2_Tuesday\",\"3_Wednesday\", \"4_Thursday\",\"5_Friday\", \"6_Sturday\", \"7_Sunday\")\ntemperature&lt;-c(24,27,25,22,30,21,28)# deg Celsius\nrain&lt;-c(1,0,0,5,2,0,0)# rain in mm\n\ndf&lt;-data.frame(date, temperature,rain)# makes data.frame\n\n#To select a column or vector. We use $ to target a vector inside a data frame\ndf$temperature\n\n[1] 24 27 25 22 30 21 28\n\ndf$temperature[2] # to obtain the 2nd element of the vector temperature. \n\n[1] 27\n\n# Bonus adding a line in our data frame\nday&lt;-list(\"8_monday\", 29, 1)# here we use list() instead of c() because there is multiple class in inside row\nnew_def&lt;-rbind(df,day)# add row to a data frame\nnew_def\n\n         date temperature rain\n1    1_monday          24    1\n2   2_Tuesday          27    0\n3 3_Wednesday          25    0\n4  4_Thursday          22    5\n5    5_Friday          30    2\n6   6_Sturday          21    0\n7    7_Sunday          28    0\n8    8_monday          29    1"
  },
  {
    "objectID": "Tuto1.html#iv-some-useful-functions-on-data-frame",
    "href": "Tuto1.html#iv-some-useful-functions-on-data-frame",
    "title": "Tuto1",
    "section": "IV-Some useful functions on data frame",
    "text": "IV-Some useful functions on data frame\n\nDefinition\nThe function are a compilation of command line with different instructions inside one object to simplify code. A function is composed by arguments and options.\nfunction(argument1, argument2, option1, … ,option10)\n\n\nUsual functions for data frame\n\nhead() # to know first line of your data frame\nclass()# return the class of the object. Ex : data.frame, matrix, list ....\nstr()# return the structure of the object. Ex : numeric, factor, character....\nnames()# to get or set the names of an object\nsum() # for addition\nmin() # return the minimum of the vector\nmax() # return the minimum of the vector\nrow.names() # attribute names for lines of the data frame\ncolnames() # attribute names for column of the data frame\napply() # Returns a vector or array or list of values obtained by applying a function to margins of an array or matrix.\n\nExample function row.names, class and str\n\ndf2 &lt;- data.frame(x = c(TRUE, FALSE, NA, NA), y = c(12, 34, 56, 78))\ndf2\n\n      x  y\n1  TRUE 12\n2 FALSE 34\n3    NA 56\n4    NA 78\n\nrow.names(df2) &lt;- 1 : 4 # give number of lines as names of the row\ncolnames(df2) &lt;- c(\"Ilove\", \"R\")\ndf2 # what do you see\n\n  Ilove  R\n1  TRUE 12\n2 FALSE 34\n3    NA 56\n4    NA 78\n\nclass(df2)\n\n[1] \"data.frame\"\n\nstr(df2)\n\n'data.frame':   4 obs. of  2 variables:\n $ Ilove: logi  TRUE FALSE NA NA\n $ R    : num  12 34 56 78\n\n\nExample function apply\n\nhead(df)\n\n         date temperature rain\n1    1_monday          24    1\n2   2_Tuesday          27    0\n3 3_Wednesday          25    0\n4  4_Thursday          22    5\n5    5_Friday          30    2\n6   6_Sturday          21    0\n\nclass(df)\n\n[1] \"data.frame\"\n\nstr(df)\n\n'data.frame':   7 obs. of  3 variables:\n $ date       : chr  \"1_monday\" \"2_Tuesday\" \"3_Wednesday\" \"4_Thursday\" ...\n $ temperature: num  24 27 25 22 30 21 28\n $ rain       : num  1 0 0 5 2 0 0\n\napply(df[,2:3], 2, mean)# return mean for the numerical column of the data.frame. apply(data,margin,fun). For margin parameter the value 1 return mean for each row, for margin=2 return mean for each selected column.\n\ntemperature        rain \n  25.285714    1.142857 \n\n\nExo 3\nFrom data set iris in package datasets** Load package datasets and load data set iris using data()\n\nGive the class Sepal.Width and Species vectors\nWhat is the minimum / maximum / average sepal length of these irises?\nWhat are the values of the first 10 irises?\nCalculate standard deviation for every numeric vector (function : sd())\nCalculate mean for every numeric vector\nCreate a data frame with mean and sd as line and give a name for each line\nAn error of 0.5cm was made in the measurement of the length of the sepal of the 41st iris: add 0.5cm to this measurement\n\n\n\nUse Tidyverse package to select, filter data in a data frame\n“tidyverse” is the contraction of “tidy” and “universe”, it’s a tidy universe if we translate word by word. In fact, it is a set of R packages that are designed to work together and thus follow the same code logic and a common grammar.\nThe most commonly used tidyverse packages are loaded in your session:\n\nggplot2\ndplyr\ntidyr\nreadr\ntibble\nstringr\n\n\ntidyverse::tidyverse_packages()\n\n [1] \"broom\"         \"conflicted\"    \"cli\"           \"dbplyr\"       \n [5] \"dplyr\"         \"dtplyr\"        \"forcats\"       \"ggplot2\"      \n [9] \"googledrive\"   \"googlesheets4\" \"haven\"         \"hms\"          \n[13] \"httr\"          \"jsonlite\"      \"lubridate\"     \"magrittr\"     \n[17] \"modelr\"        \"pillar\"        \"purrr\"         \"ragg\"         \n[21] \"readr\"         \"readxl\"        \"reprex\"        \"rlang\"        \n[25] \"rstudioapi\"    \"rvest\"         \"stringr\"       \"tibble\"       \n[29] \"tidyr\"         \"xml2\"          \"tidyverse\"    \n\n\n\nFilter and select variable in data frame\n\ndata(\"iris\")\n#To select a variable with tidyverse\ndplyr::select(iris, Species)\n\n       Species\n1       setosa\n2       setosa\n3       setosa\n4       setosa\n5       setosa\n6       setosa\n7       setosa\n8       setosa\n9       setosa\n10      setosa\n11      setosa\n12      setosa\n13      setosa\n14      setosa\n15      setosa\n16      setosa\n17      setosa\n18      setosa\n19      setosa\n20      setosa\n21      setosa\n22      setosa\n23      setosa\n24      setosa\n25      setosa\n26      setosa\n27      setosa\n28      setosa\n29      setosa\n30      setosa\n31      setosa\n32      setosa\n33      setosa\n34      setosa\n35      setosa\n36      setosa\n37      setosa\n38      setosa\n39      setosa\n40      setosa\n41      setosa\n42      setosa\n43      setosa\n44      setosa\n45      setosa\n46      setosa\n47      setosa\n48      setosa\n49      setosa\n50      setosa\n51  versicolor\n52  versicolor\n53  versicolor\n54  versicolor\n55  versicolor\n56  versicolor\n57  versicolor\n58  versicolor\n59  versicolor\n60  versicolor\n61  versicolor\n62  versicolor\n63  versicolor\n64  versicolor\n65  versicolor\n66  versicolor\n67  versicolor\n68  versicolor\n69  versicolor\n70  versicolor\n71  versicolor\n72  versicolor\n73  versicolor\n74  versicolor\n75  versicolor\n76  versicolor\n77  versicolor\n78  versicolor\n79  versicolor\n80  versicolor\n81  versicolor\n82  versicolor\n83  versicolor\n84  versicolor\n85  versicolor\n86  versicolor\n87  versicolor\n88  versicolor\n89  versicolor\n90  versicolor\n91  versicolor\n92  versicolor\n93  versicolor\n94  versicolor\n95  versicolor\n96  versicolor\n97  versicolor\n98  versicolor\n99  versicolor\n100 versicolor\n101  virginica\n102  virginica\n103  virginica\n104  virginica\n105  virginica\n106  virginica\n107  virginica\n108  virginica\n109  virginica\n110  virginica\n111  virginica\n112  virginica\n113  virginica\n114  virginica\n115  virginica\n116  virginica\n117  virginica\n118  virginica\n119  virginica\n120  virginica\n121  virginica\n122  virginica\n123  virginica\n124  virginica\n125  virginica\n126  virginica\n127  virginica\n128  virginica\n129  virginica\n130  virginica\n131  virginica\n132  virginica\n133  virginica\n134  virginica\n135  virginica\n136  virginica\n137  virginica\n138  virginica\n139  virginica\n140  virginica\n141  virginica\n142  virginica\n143  virginica\n144  virginica\n145  virginica\n146  virginica\n147  virginica\n148  virginica\n149  virginica\n150  virginica\n\n\n\n#To select several variables with tidyverse\ndplyr::select(iris,Species, Sepal.Length, Sepal.Width)\n\n       Species Sepal.Length Sepal.Width\n1       setosa          5.1         3.5\n2       setosa          4.9         3.0\n3       setosa          4.7         3.2\n4       setosa          4.6         3.1\n5       setosa          5.0         3.6\n6       setosa          5.4         3.9\n7       setosa          4.6         3.4\n8       setosa          5.0         3.4\n9       setosa          4.4         2.9\n10      setosa          4.9         3.1\n11      setosa          5.4         3.7\n12      setosa          4.8         3.4\n13      setosa          4.8         3.0\n14      setosa          4.3         3.0\n15      setosa          5.8         4.0\n16      setosa          5.7         4.4\n17      setosa          5.4         3.9\n18      setosa          5.1         3.5\n19      setosa          5.7         3.8\n20      setosa          5.1         3.8\n21      setosa          5.4         3.4\n22      setosa          5.1         3.7\n23      setosa          4.6         3.6\n24      setosa          5.1         3.3\n25      setosa          4.8         3.4\n26      setosa          5.0         3.0\n27      setosa          5.0         3.4\n28      setosa          5.2         3.5\n29      setosa          5.2         3.4\n30      setosa          4.7         3.2\n31      setosa          4.8         3.1\n32      setosa          5.4         3.4\n33      setosa          5.2         4.1\n34      setosa          5.5         4.2\n35      setosa          4.9         3.1\n36      setosa          5.0         3.2\n37      setosa          5.5         3.5\n38      setosa          4.9         3.6\n39      setosa          4.4         3.0\n40      setosa          5.1         3.4\n41      setosa          5.0         3.5\n42      setosa          4.5         2.3\n43      setosa          4.4         3.2\n44      setosa          5.0         3.5\n45      setosa          5.1         3.8\n46      setosa          4.8         3.0\n47      setosa          5.1         3.8\n48      setosa          4.6         3.2\n49      setosa          5.3         3.7\n50      setosa          5.0         3.3\n51  versicolor          7.0         3.2\n52  versicolor          6.4         3.2\n53  versicolor          6.9         3.1\n54  versicolor          5.5         2.3\n55  versicolor          6.5         2.8\n56  versicolor          5.7         2.8\n57  versicolor          6.3         3.3\n58  versicolor          4.9         2.4\n59  versicolor          6.6         2.9\n60  versicolor          5.2         2.7\n61  versicolor          5.0         2.0\n62  versicolor          5.9         3.0\n63  versicolor          6.0         2.2\n64  versicolor          6.1         2.9\n65  versicolor          5.6         2.9\n66  versicolor          6.7         3.1\n67  versicolor          5.6         3.0\n68  versicolor          5.8         2.7\n69  versicolor          6.2         2.2\n70  versicolor          5.6         2.5\n71  versicolor          5.9         3.2\n72  versicolor          6.1         2.8\n73  versicolor          6.3         2.5\n74  versicolor          6.1         2.8\n75  versicolor          6.4         2.9\n76  versicolor          6.6         3.0\n77  versicolor          6.8         2.8\n78  versicolor          6.7         3.0\n79  versicolor          6.0         2.9\n80  versicolor          5.7         2.6\n81  versicolor          5.5         2.4\n82  versicolor          5.5         2.4\n83  versicolor          5.8         2.7\n84  versicolor          6.0         2.7\n85  versicolor          5.4         3.0\n86  versicolor          6.0         3.4\n87  versicolor          6.7         3.1\n88  versicolor          6.3         2.3\n89  versicolor          5.6         3.0\n90  versicolor          5.5         2.5\n91  versicolor          5.5         2.6\n92  versicolor          6.1         3.0\n93  versicolor          5.8         2.6\n94  versicolor          5.0         2.3\n95  versicolor          5.6         2.7\n96  versicolor          5.7         3.0\n97  versicolor          5.7         2.9\n98  versicolor          6.2         2.9\n99  versicolor          5.1         2.5\n100 versicolor          5.7         2.8\n101  virginica          6.3         3.3\n102  virginica          5.8         2.7\n103  virginica          7.1         3.0\n104  virginica          6.3         2.9\n105  virginica          6.5         3.0\n106  virginica          7.6         3.0\n107  virginica          4.9         2.5\n108  virginica          7.3         2.9\n109  virginica          6.7         2.5\n110  virginica          7.2         3.6\n111  virginica          6.5         3.2\n112  virginica          6.4         2.7\n113  virginica          6.8         3.0\n114  virginica          5.7         2.5\n115  virginica          5.8         2.8\n116  virginica          6.4         3.2\n117  virginica          6.5         3.0\n118  virginica          7.7         3.8\n119  virginica          7.7         2.6\n120  virginica          6.0         2.2\n121  virginica          6.9         3.2\n122  virginica          5.6         2.8\n123  virginica          7.7         2.8\n124  virginica          6.3         2.7\n125  virginica          6.7         3.3\n126  virginica          7.2         3.2\n127  virginica          6.2         2.8\n128  virginica          6.1         3.0\n129  virginica          6.4         2.8\n130  virginica          7.2         3.0\n131  virginica          7.4         2.8\n132  virginica          7.9         3.8\n133  virginica          6.4         2.8\n134  virginica          6.3         2.8\n135  virginica          6.1         2.6\n136  virginica          7.7         3.0\n137  virginica          6.3         3.4\n138  virginica          6.4         3.1\n139  virginica          6.0         3.0\n140  virginica          6.9         3.1\n141  virginica          6.7         3.1\n142  virginica          6.9         3.1\n143  virginica          5.8         2.7\n144  virginica          6.8         3.2\n145  virginica          6.7         3.3\n146  virginica          6.7         3.0\n147  virginica          6.3         2.5\n148  virginica          6.5         3.0\n149  virginica          6.2         3.4\n150  virginica          5.9         3.0\n\n# To select several lines inside data frame \ndplyr::slice(iris,22:30)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.7          1.5         0.4  setosa\n2          4.6         3.6          1.0         0.2  setosa\n3          5.1         3.3          1.7         0.5  setosa\n4          4.8         3.4          1.9         0.2  setosa\n5          5.0         3.0          1.6         0.2  setosa\n6          5.0         3.4          1.6         0.4  setosa\n7          5.2         3.5          1.5         0.2  setosa\n8          5.2         3.4          1.4         0.2  setosa\n9          4.7         3.2          1.6         0.2  setosa\n\n# I can affect it to an object \n\nsubdata=dplyr::slice(iris,22:30)\n\n#or choosing different lines\nmyline=c(22, 38, 120) # I build a vector containing the line that I want\ndplyr::slice(iris,myline)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n1          5.1         3.7          1.5         0.4    setosa\n2          4.9         3.6          1.4         0.1    setosa\n3          6.0         2.2          5.0         1.5 virginica\n\n\n\n\nBonus : to pipe many function serval function together\nThe pipe  &gt;| , or %&gt;%, is one of the useful elements of the tidyverse. It allows to structure sequences of operations by minimizing the creation of intermediate objects and by facilitating the addition of a step anywhere in this sequence.\nThe useful command to manage data frame : 1) select() to select vector or variable from a data frame ; 2) filter() is used to subset a data frame, retaining all rows that satisfy your conditions ; mutate() adds new variables and preserves existing ones.\n\nlibrary(dplyr)\n\nWarning: le package 'dplyr' a été compilé avec la version R 4.1.2\n\n\n\nAttachement du package : 'dplyr'\n\n\nLes objets suivants sont masqués depuis 'package:stats':\n\n    filter, lag\n\n\nLes objets suivants sont masqués depuis 'package:base':\n\n    intersect, setdiff, setequal, union\n\niris %&gt;%\nfilter(Sepal.Length &gt; 6) %&gt;% # filtered using size of Sepal Length\nfilter(Species == \"versicolor\") # and the species \n\n   Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1           7.0         3.2          4.7         1.4 versicolor\n2           6.4         3.2          4.5         1.5 versicolor\n3           6.9         3.1          4.9         1.5 versicolor\n4           6.5         2.8          4.6         1.5 versicolor\n5           6.3         3.3          4.7         1.6 versicolor\n6           6.6         2.9          4.6         1.3 versicolor\n7           6.1         2.9          4.7         1.4 versicolor\n8           6.7         3.1          4.4         1.4 versicolor\n9           6.2         2.2          4.5         1.5 versicolor\n10          6.1         2.8          4.0         1.3 versicolor\n11          6.3         2.5          4.9         1.5 versicolor\n12          6.1         2.8          4.7         1.2 versicolor\n13          6.4         2.9          4.3         1.3 versicolor\n14          6.6         3.0          4.4         1.4 versicolor\n15          6.8         2.8          4.8         1.4 versicolor\n16          6.7         3.0          5.0         1.7 versicolor\n17          6.7         3.1          4.7         1.5 versicolor\n18          6.3         2.3          4.4         1.3 versicolor\n19          6.1         3.0          4.6         1.4 versicolor\n20          6.2         2.9          4.3         1.3 versicolor\n\n\n\niris %&gt;%\n select(Sepal.Length, Species) %&gt;%\n mutate(Sepal.Length2 = Sepal.Length * 2)%&gt;%\n mutate(Sepal.Length2_squared = Sepal.Length2 * Sepal.Length2)\n\n    Sepal.Length    Species Sepal.Length2 Sepal.Length2_squared\n1            5.1     setosa          10.2                104.04\n2            4.9     setosa           9.8                 96.04\n3            4.7     setosa           9.4                 88.36\n4            4.6     setosa           9.2                 84.64\n5            5.0     setosa          10.0                100.00\n6            5.4     setosa          10.8                116.64\n7            4.6     setosa           9.2                 84.64\n8            5.0     setosa          10.0                100.00\n9            4.4     setosa           8.8                 77.44\n10           4.9     setosa           9.8                 96.04\n11           5.4     setosa          10.8                116.64\n12           4.8     setosa           9.6                 92.16\n13           4.8     setosa           9.6                 92.16\n14           4.3     setosa           8.6                 73.96\n15           5.8     setosa          11.6                134.56\n16           5.7     setosa          11.4                129.96\n17           5.4     setosa          10.8                116.64\n18           5.1     setosa          10.2                104.04\n19           5.7     setosa          11.4                129.96\n20           5.1     setosa          10.2                104.04\n21           5.4     setosa          10.8                116.64\n22           5.1     setosa          10.2                104.04\n23           4.6     setosa           9.2                 84.64\n24           5.1     setosa          10.2                104.04\n25           4.8     setosa           9.6                 92.16\n26           5.0     setosa          10.0                100.00\n27           5.0     setosa          10.0                100.00\n28           5.2     setosa          10.4                108.16\n29           5.2     setosa          10.4                108.16\n30           4.7     setosa           9.4                 88.36\n31           4.8     setosa           9.6                 92.16\n32           5.4     setosa          10.8                116.64\n33           5.2     setosa          10.4                108.16\n34           5.5     setosa          11.0                121.00\n35           4.9     setosa           9.8                 96.04\n36           5.0     setosa          10.0                100.00\n37           5.5     setosa          11.0                121.00\n38           4.9     setosa           9.8                 96.04\n39           4.4     setosa           8.8                 77.44\n40           5.1     setosa          10.2                104.04\n41           5.0     setosa          10.0                100.00\n42           4.5     setosa           9.0                 81.00\n43           4.4     setosa           8.8                 77.44\n44           5.0     setosa          10.0                100.00\n45           5.1     setosa          10.2                104.04\n46           4.8     setosa           9.6                 92.16\n47           5.1     setosa          10.2                104.04\n48           4.6     setosa           9.2                 84.64\n49           5.3     setosa          10.6                112.36\n50           5.0     setosa          10.0                100.00\n51           7.0 versicolor          14.0                196.00\n52           6.4 versicolor          12.8                163.84\n53           6.9 versicolor          13.8                190.44\n54           5.5 versicolor          11.0                121.00\n55           6.5 versicolor          13.0                169.00\n56           5.7 versicolor          11.4                129.96\n57           6.3 versicolor          12.6                158.76\n58           4.9 versicolor           9.8                 96.04\n59           6.6 versicolor          13.2                174.24\n60           5.2 versicolor          10.4                108.16\n61           5.0 versicolor          10.0                100.00\n62           5.9 versicolor          11.8                139.24\n63           6.0 versicolor          12.0                144.00\n64           6.1 versicolor          12.2                148.84\n65           5.6 versicolor          11.2                125.44\n66           6.7 versicolor          13.4                179.56\n67           5.6 versicolor          11.2                125.44\n68           5.8 versicolor          11.6                134.56\n69           6.2 versicolor          12.4                153.76\n70           5.6 versicolor          11.2                125.44\n71           5.9 versicolor          11.8                139.24\n72           6.1 versicolor          12.2                148.84\n73           6.3 versicolor          12.6                158.76\n74           6.1 versicolor          12.2                148.84\n75           6.4 versicolor          12.8                163.84\n76           6.6 versicolor          13.2                174.24\n77           6.8 versicolor          13.6                184.96\n78           6.7 versicolor          13.4                179.56\n79           6.0 versicolor          12.0                144.00\n80           5.7 versicolor          11.4                129.96\n81           5.5 versicolor          11.0                121.00\n82           5.5 versicolor          11.0                121.00\n83           5.8 versicolor          11.6                134.56\n84           6.0 versicolor          12.0                144.00\n85           5.4 versicolor          10.8                116.64\n86           6.0 versicolor          12.0                144.00\n87           6.7 versicolor          13.4                179.56\n88           6.3 versicolor          12.6                158.76\n89           5.6 versicolor          11.2                125.44\n90           5.5 versicolor          11.0                121.00\n91           5.5 versicolor          11.0                121.00\n92           6.1 versicolor          12.2                148.84\n93           5.8 versicolor          11.6                134.56\n94           5.0 versicolor          10.0                100.00\n95           5.6 versicolor          11.2                125.44\n96           5.7 versicolor          11.4                129.96\n97           5.7 versicolor          11.4                129.96\n98           6.2 versicolor          12.4                153.76\n99           5.1 versicolor          10.2                104.04\n100          5.7 versicolor          11.4                129.96\n101          6.3  virginica          12.6                158.76\n102          5.8  virginica          11.6                134.56\n103          7.1  virginica          14.2                201.64\n104          6.3  virginica          12.6                158.76\n105          6.5  virginica          13.0                169.00\n106          7.6  virginica          15.2                231.04\n107          4.9  virginica           9.8                 96.04\n108          7.3  virginica          14.6                213.16\n109          6.7  virginica          13.4                179.56\n110          7.2  virginica          14.4                207.36\n111          6.5  virginica          13.0                169.00\n112          6.4  virginica          12.8                163.84\n113          6.8  virginica          13.6                184.96\n114          5.7  virginica          11.4                129.96\n115          5.8  virginica          11.6                134.56\n116          6.4  virginica          12.8                163.84\n117          6.5  virginica          13.0                169.00\n118          7.7  virginica          15.4                237.16\n119          7.7  virginica          15.4                237.16\n120          6.0  virginica          12.0                144.00\n121          6.9  virginica          13.8                190.44\n122          5.6  virginica          11.2                125.44\n123          7.7  virginica          15.4                237.16\n124          6.3  virginica          12.6                158.76\n125          6.7  virginica          13.4                179.56\n126          7.2  virginica          14.4                207.36\n127          6.2  virginica          12.4                153.76\n128          6.1  virginica          12.2                148.84\n129          6.4  virginica          12.8                163.84\n130          7.2  virginica          14.4                207.36\n131          7.4  virginica          14.8                219.04\n132          7.9  virginica          15.8                249.64\n133          6.4  virginica          12.8                163.84\n134          6.3  virginica          12.6                158.76\n135          6.1  virginica          12.2                148.84\n136          7.7  virginica          15.4                237.16\n137          6.3  virginica          12.6                158.76\n138          6.4  virginica          12.8                163.84\n139          6.0  virginica          12.0                144.00\n140          6.9  virginica          13.8                190.44\n141          6.7  virginica          13.4                179.56\n142          6.9  virginica          13.8                190.44\n143          5.8  virginica          11.6                134.56\n144          6.8  virginica          13.6                184.96\n145          6.7  virginica          13.4                179.56\n146          6.7  virginica          13.4                179.56\n147          6.3  virginica          12.6                158.76\n148          6.5  virginica          13.0                169.00\n149          6.2  virginica          12.4                153.76\n150          5.9  virginica          11.8                139.24\n\niris %&gt;%\n  select(Sepal.Length, Species) %&gt;%\n  mutate(Sepal.Length = Sepal.Length / mean(Sepal.Length, na.rm = TRUE))\n\n    Sepal.Length    Species\n1      0.8727895     setosa\n2      0.8385625     setosa\n3      0.8043354     setosa\n4      0.7872219     setosa\n5      0.8556760     setosa\n6      0.9241301     setosa\n7      0.7872219     setosa\n8      0.8556760     setosa\n9      0.7529949     setosa\n10     0.8385625     setosa\n11     0.9241301     setosa\n12     0.8214489     setosa\n13     0.8214489     setosa\n14     0.7358813     setosa\n15     0.9925841     setosa\n16     0.9754706     setosa\n17     0.9241301     setosa\n18     0.8727895     setosa\n19     0.9754706     setosa\n20     0.8727895     setosa\n21     0.9241301     setosa\n22     0.8727895     setosa\n23     0.7872219     setosa\n24     0.8727895     setosa\n25     0.8214489     setosa\n26     0.8556760     setosa\n27     0.8556760     setosa\n28     0.8899030     setosa\n29     0.8899030     setosa\n30     0.8043354     setosa\n31     0.8214489     setosa\n32     0.9241301     setosa\n33     0.8899030     setosa\n34     0.9412436     setosa\n35     0.8385625     setosa\n36     0.8556760     setosa\n37     0.9412436     setosa\n38     0.8385625     setosa\n39     0.7529949     setosa\n40     0.8727895     setosa\n41     0.8556760     setosa\n42     0.7701084     setosa\n43     0.7529949     setosa\n44     0.8556760     setosa\n45     0.8727895     setosa\n46     0.8214489     setosa\n47     0.8727895     setosa\n48     0.7872219     setosa\n49     0.9070165     setosa\n50     0.8556760     setosa\n51     1.1979464 versicolor\n52     1.0952653 versicolor\n53     1.1808329 versicolor\n54     0.9412436 versicolor\n55     1.1123788 versicolor\n56     0.9754706 versicolor\n57     1.0781517 versicolor\n58     0.8385625 versicolor\n59     1.1294923 versicolor\n60     0.8899030 versicolor\n61     0.8556760 versicolor\n62     1.0096977 versicolor\n63     1.0268112 versicolor\n64     1.0439247 versicolor\n65     0.9583571 versicolor\n66     1.1466058 versicolor\n67     0.9583571 versicolor\n68     0.9925841 versicolor\n69     1.0610382 versicolor\n70     0.9583571 versicolor\n71     1.0096977 versicolor\n72     1.0439247 versicolor\n73     1.0781517 versicolor\n74     1.0439247 versicolor\n75     1.0952653 versicolor\n76     1.1294923 versicolor\n77     1.1637193 versicolor\n78     1.1466058 versicolor\n79     1.0268112 versicolor\n80     0.9754706 versicolor\n81     0.9412436 versicolor\n82     0.9412436 versicolor\n83     0.9925841 versicolor\n84     1.0268112 versicolor\n85     0.9241301 versicolor\n86     1.0268112 versicolor\n87     1.1466058 versicolor\n88     1.0781517 versicolor\n89     0.9583571 versicolor\n90     0.9412436 versicolor\n91     0.9412436 versicolor\n92     1.0439247 versicolor\n93     0.9925841 versicolor\n94     0.8556760 versicolor\n95     0.9583571 versicolor\n96     0.9754706 versicolor\n97     0.9754706 versicolor\n98     1.0610382 versicolor\n99     0.8727895 versicolor\n100    0.9754706 versicolor\n101    1.0781517  virginica\n102    0.9925841  virginica\n103    1.2150599  virginica\n104    1.0781517  virginica\n105    1.1123788  virginica\n106    1.3006275  virginica\n107    0.8385625  virginica\n108    1.2492869  virginica\n109    1.1466058  virginica\n110    1.2321734  virginica\n111    1.1123788  virginica\n112    1.0952653  virginica\n113    1.1637193  virginica\n114    0.9754706  virginica\n115    0.9925841  virginica\n116    1.0952653  virginica\n117    1.1123788  virginica\n118    1.3177410  virginica\n119    1.3177410  virginica\n120    1.0268112  virginica\n121    1.1808329  virginica\n122    0.9583571  virginica\n123    1.3177410  virginica\n124    1.0781517  virginica\n125    1.1466058  virginica\n126    1.2321734  virginica\n127    1.0610382  virginica\n128    1.0439247  virginica\n129    1.0952653  virginica\n130    1.2321734  virginica\n131    1.2664005  virginica\n132    1.3519681  virginica\n133    1.0952653  virginica\n134    1.0781517  virginica\n135    1.0439247  virginica\n136    1.3177410  virginica\n137    1.0781517  virginica\n138    1.0952653  virginica\n139    1.0268112  virginica\n140    1.1808329  virginica\n141    1.1466058  virginica\n142    1.1808329  virginica\n143    0.9925841  virginica\n144    1.1637193  virginica\n145    1.1466058  virginica\n146    1.1466058  virginica\n147    1.0781517  virginica\n148    1.1123788  virginica\n149    1.0610382  virginica\n150    1.0096977  virginica\n\n#Sepal.Length_norm is calculated using the mean of the Sepal.Length for all data set.\n\niris %&gt;%\n  select(Sepal.Length, Species) %&gt;%\n  group_by(Species) %&gt;%\n  mutate(Sepal.Length_norm = Sepal.Length / mean(Sepal.Length, na.rm = TRUE))\n\n# A tibble: 150 × 3\n# Groups:   Species [3]\n   Sepal.Length Species Sepal.Length_norm\n          &lt;dbl&gt; &lt;fct&gt;               &lt;dbl&gt;\n 1          5.1 setosa              1.02 \n 2          4.9 setosa              0.979\n 3          4.7 setosa              0.939\n 4          4.6 setosa              0.919\n 5          5   setosa              0.999\n 6          5.4 setosa              1.08 \n 7          4.6 setosa              0.919\n 8          5   setosa              0.999\n 9          4.4 setosa              0.879\n10          4.9 setosa              0.979\n# … with 140 more rows\n\n# In this last example Sepal.Length_norm is calculated using the mean of the Sepal.Length for each species using group_by()\n\n These commands are non-persistent, no changes are made on the original iris data frame. If you want to store it, you must assign your changes to a object\n\niris_modif&lt;-iris %&gt;%\n  select(Sepal.Length, Species) %&gt;%\n  group_by(Species) %&gt;%\n  mutate(Sepal.Length_norm = Sepal.Length / mean(Sepal.Length, na.rm = TRUE))"
  },
  {
    "objectID": "Tuto1.html#v-how-to-import-external-data-frame-issue-from-.txt-or-.csv",
    "href": "Tuto1.html#v-how-to-import-external-data-frame-issue-from-.txt-or-.csv",
    "title": "Tuto1",
    "section": "V-How to import external data frame issue from .txt or .csv",
    "text": "V-How to import external data frame issue from .txt or .csv\nTo import data set, the function read.table() or read.csv() commonly use.\nread.table(file, header = FALSE, sep = \"\", dec = \".\", ...)\nThe main parameter are :\n\nfile : add the pathway and the name of the file\nheader : a logical value (TRUE or FALSE)indicating whether the file contains the names of the variables as its first line.\nsep : the field separator character. Values on each line of the file are separated by this character. If sep = “” (the default for read.table) the separator is ‘white space’, that is one or more spaces, tabs, newlines or carriage returns.\ndec : the character used in the file for decimal points.\n\n\nds &lt;- read.table(here::here(\"data\",\n                            \"rforbeginers\",\n                            \"exemple_read.txt\"),\n                 header = TRUE,\n                 sep = \";\",\n                 dec = \",\")\n\nWhy I use the parameter header=TRUE ?\n\nTo export data set as .txt to read in excel\nThe function is write.table similar to read.table\nwrite.table(x, file = \"\", sep = \" \",na = \"NA\", dec = \".\", ... )\n\nx : this is your data.frame()\nfile : give a name for your file\nsep : cf read.table\ndec : cf read.table\nna : give a symbole for missing data, by convention is NA\n\n\nwrite.table(ds, \"ds.txt\", sep=\"\\t\", dec=\".\")\n\nExo 4\n\nIn the dataset Iris select Sepal Width, Sepal length and Species,to create a new data frame name “subset_iris”\nSave this new data frame as text file"
  },
  {
    "objectID": "Tuto1.html#vi-how-to-represent-your-data",
    "href": "Tuto1.html#vi-how-to-represent-your-data",
    "title": "Tuto1",
    "section": "VI-How to represent your data",
    "text": "VI-How to represent your data\nggplot2 is a powerfull packages to make a very smart graph “ready to use” for publication. gg means grammar and graph, a concept which describe a graph using grammar. This package belong to tidyverse according to dplyr. According to the ggplot2 concept, a graph can be divided into different basic parts:Plot = data + Aesthetics + Geometry\n\ndata : data frame\naesthetics : allows to indicate the x and y variables. It can also be used to control the color, size and shape of the points, etc…\ngeometry : corresponds to the type of graph (histogram, box plot, line plot, …..)\n\n\nlibrary(ggplot2)\n\nWarning: le package 'ggplot2' a été compilé avec la version R 4.1.2\n\n# scatter plot \nggplot(data = iris, aes(Sepal.Length, Sepal.Width))+ #  what I want to represent \n  geom_point() # how I represent it \n\n\n\n\n\n# We can calorize and give a shape by month \n# scatter plot \nggplot(data = iris, aes(Sepal.Length, Sepal.Width))+ \n  geom_point(aes(color = Species, shape = Species)) # shape is the same thing with classical plot on R\n\n\n\n\n\n# You can change manually color with la fonction scale_color_manual()\nggplot(data = iris, aes(Sepal.Length, Sepal.Width))+  \n geom_point(aes(color = Species, shape = Species))  +\n  scale_color_manual(values = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n\n\n\n\n\n#Boxplot \nggplot(data = iris, aes(Species, Sepal.Length))+ #  what I want to represent \n  geom_boxplot(aes(color=Species, fill=Species), alpha=0.4)+# how I represent it. Here I changed geometry using boxplot.\n  labs(x=\"Species\", y=\"Sepal.Length (mm)\")+\n  theme_minimal()"
  },
  {
    "objectID": "Graph.html",
    "href": "Graph.html",
    "title": "Graph",
    "section": "",
    "text": "ggplot2 is a powerfull packages to make a very smart graph “ready to use” for publication. gg means grammar and graph, a concept which describe a graph using grammar. This package belong to tidyverse according to “dplyr”. According to the ggplot2 concept, a graph can be divided into different basic parts:Plot = data + Aesthetics + Geometry\n\ndata : data frame\naesthetics : allows to indicate the x and y variables. It can also be used to control the color, size and shape of the points, etc…\ngeometry : corresponds to the type of graph (histogram, box plot, line plot, …..)\n\n\n\n\n\n\n# if not alraedy done load library ggplot2\nlibrary(ggplot2)\n\nWarning: le package 'ggplot2' a été compilé avec la version R 4.1.2\n\ndata(iris)\nggplot(data = iris, aes(Sepal.Length, Sepal.Width))+ # scatter plot \n  geom_point()\n\n\n\n\n\n\n\n\nggplot(data = iris, aes(Sepal.Length, Sepal.Width))+ # scatter plot \n  geom_line()\n\n\n\n\n\n\n\n\n\n\n\n# Change size, color and shape in a scatter plot \nggplot(data = iris, aes(Sepal.Length, Sepal.Width))+ # scatter plot \n  geom_point(size=3, color =\"steelblue\", shape=21)  # shape is the same thing wiht classical plot on R\n\n\n\n\n\n\n\n\n\n\n# We can calorize and give a shape by month \nggplot(data = iris, aes(Sepal.Length, Sepal.Width))+ # scatter plot \n  geom_point(aes(color = Species, shape = Species)) # shape is the same thing with classical plot on R\n\n\n\n\n\n\n\nBe carefull alpha option is for transparency and ranged between 0 and 1\n\nggplot(data = iris, aes(Sepal.Width,Sepal.Length))+  \ngeom_point(aes(color = Petal.Width, shape = Species), size = 2,alpha=(0.8))\n\n\n\n\nWhat kind of conclusion we can give me with this kind of graph?\n\n\n\n\n\nggplot(data = iris, aes(Sepal.Width,Sepal.Length))+  \ngeom_point(aes(color = Petal.Width, shape = Species), size = 2,alpha=(0.8))+\nscale_color_gradient(low = \"yellow\", high = \"red\")\n\n\n\n\n\n\n\n# You can change manually color with la fonction scale_color_manual()\nggplot(data = iris, aes(Sepal.Length, Sepal.Width))+ # scatter plot \n geom_point(aes(color = Species, shape = Species))  +\n  scale_color_manual(values = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n\n\n\n#You can store your plot in a variable to print later \np&lt;-ggplot(data = iris, aes(Sepal.Length, Sepal.Width))+ # scatter plot \n geom_point(aes(color = Species, shape = Species))  +\n  scale_color_manual(values = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))+\n  theme_minimal()\n  \n\nprint(p)\n\n\n\n\nWhat do you see if you play the following command : names(p)?\n\n\n\n\n\n#To arrange the graph we can add some label and change the position of the legend\np + theme(legend.position = \"top\")\n\n\n\np + labs(color = \"Species\", shape= \"Sepcies\",\n  title = \"Sepal Length for each speices\",\n  subtitle = \"is a data frame with 150 cases (rows) and 5 variables\",\n  x = \"Sepal.Length (mm)\", y = \"Sepal.Width (mm)\"\n  )\n\n\n\n\n\n\n\n\np2&lt;-ggplot(data = iris, aes(Sepal.Length,Petal.Length))+ # scatter plot \n  geom_point(size=3, color =\"steelblue\") +\n  stat_smooth(method=lm, se=TRUE, na.rm=TRUE, show.legend = TRUE)\np2 + labs(x = \"Sepal.Length (mm)\", y = \"Pepal.Length (mm)\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nTo get data from the trend\n\nggplot_build(p2)$data[[2]]\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n          x         y      ymin     ymax         se flipped_aes PANEL group\n1  4.300000 0.8898184 0.5928870 1.186750 0.15025965       FALSE     1    -1\n2  4.345570 0.9745065 0.6843700 1.264643 0.14682115       FALSE     1    -1\n3  4.391139 1.0591946 0.7758049 1.342584 0.14340694       FALSE     1    -1\n4  4.436709 1.1438827 0.8671884 1.420577 0.14001881       FALSE     1    -1\n5  4.482278 1.2285708 0.9585165 1.498625 0.13665869       FALSE     1    -1\n6  4.527848 1.3132589 1.0497850 1.576733 0.13332869       FALSE     1    -1\n7  4.573418 1.3979469 1.1409895 1.654904 0.13003114       FALSE     1    -1\n8  4.618987 1.4826350 1.2321248 1.733145 0.12676857       FALSE     1    -1\n9  4.664557 1.5673231 1.3231856 1.811461 0.12354374       FALSE     1    -1\n10 4.710127 1.6520112 1.4141657 1.889857 0.12035969       FALSE     1    -1\n11 4.755696 1.7366993 1.5050587 1.968340 0.11721974       FALSE     1    -1\n12 4.801266 1.8213874 1.5958574 2.046917 0.11412754       FALSE     1    -1\n13 4.846835 1.9060755 1.6865538 2.125597 0.11108706       FALSE     1    -1\n14 4.892405 1.9907635 1.7771394 2.204388 0.10810268       FALSE     1    -1\n15 4.937975 2.0754516 1.8676047 2.283299 0.10517918       FALSE     1    -1\n16 4.983544 2.1601397 1.9579394 2.362340 0.10232176       FALSE     1    -1\n17 5.029114 2.2448278 2.0481322 2.441523 0.09953612       FALSE     1    -1\n18 5.074684 2.3295159 2.1381710 2.520861 0.09682845       FALSE     1    -1\n19 5.120253 2.4142040 2.2280424 2.600366 0.09420548       FALSE     1    -1\n20 5.165823 2.4988921 2.3177320 2.680052 0.09167449       FALSE     1    -1\n21 5.211392 2.5835801 2.4072245 2.759936 0.08924328       FALSE     1    -1\n22 5.256962 2.6682682 2.4965032 2.840033 0.08692025       FALSE     1    -1\n23 5.302532 2.7529563 2.5855505 2.920362 0.08471428       FALSE     1    -1\n24 5.348101 2.8376444 2.6743480 3.000941 0.08263476       FALSE     1    -1\n25 5.393671 2.9223325 2.7628763 3.081789 0.08069145       FALSE     1    -1\n26 5.439241 3.0070206 2.8511155 3.162926 0.07889444       FALSE     1    -1\n27 5.484810 3.0917086 2.9390454 3.244372 0.07725392       FALSE     1    -1\n28 5.530380 3.1763967 3.0266461 3.326147 0.07578006       FALSE     1    -1\n29 5.575949 3.2610848 3.1138978 3.408272 0.07448275       FALSE     1    -1\n30 5.621519 3.3457729 3.2007821 3.490764 0.07337136       FALSE     1    -1\n31 5.667089 3.4304610 3.2872821 3.573640 0.07245446       FALSE     1    -1\n32 5.712658 3.5151491 3.3733831 3.656915 0.07173948       FALSE     1    -1\n33 5.758228 3.5998372 3.4590730 3.740601 0.07123252       FALSE     1    -1\n34 5.803797 3.6845252 3.5443430 3.824707 0.07093803       FALSE     1    -1\n35 5.849367 3.7692133 3.6291879 3.909239 0.07085867       FALSE     1    -1\n36 5.894937 3.8539014 3.7136063 3.994197 0.07099515       FALSE     1    -1\n37 5.940506 3.9385895 3.7976006 4.079578 0.07134624       FALSE     1    -1\n38 5.986076 4.0232776 3.8811770 4.165378 0.07190879       FALSE     1    -1\n39 6.031646 4.1079657 3.9643453 4.251586 0.07267789       FALSE     1    -1\n40 6.077215 4.1926538 4.0471181 4.338189 0.07364708       FALSE     1    -1\n41 6.122785 4.2773418 4.1295109 4.425173 0.07480857       FALSE     1    -1\n42 6.168354 4.3620299 4.2115411 4.512519 0.07615357       FALSE     1    -1\n43 6.213924 4.4467180 4.2932276 4.600208 0.07767254       FALSE     1    -1\n44 6.259494 4.5314061 4.3745899 4.688222 0.07935550       FALSE     1    -1\n45 6.305063 4.6160942 4.4556484 4.776540 0.08119225       FALSE     1    -1\n46 6.350633 4.7007823 4.5364230 4.865141 0.08317259       FALSE     1    -1\n47 6.396203 4.7854704 4.6169337 4.954007 0.08528654       FALSE     1    -1\n48 6.441772 4.8701584 4.6971995 5.043117 0.08752440       FALSE     1    -1\n49 6.487342 4.9548465 4.7772387 5.132454 0.08987692       FALSE     1    -1\n50 6.532911 5.0395346 4.8570686 5.222001 0.09233535       FALSE     1    -1\n51 6.578481 5.1242227 4.9367056 5.311740 0.09489144       FALSE     1    -1\n52 6.624051 5.2089108 5.0161647 5.401657 0.09753752       FALSE     1    -1\n53 6.669620 5.2935989 5.0954600 5.491738 0.10026647       FALSE     1    -1\n54 6.715190 5.3782869 5.1746046 5.581969 0.10307170       FALSE     1    -1\n55 6.760759 5.4629750 5.2536105 5.672340 0.10594715       FALSE     1    -1\n56 6.806329 5.5476631 5.3324885 5.762838 0.10888727       FALSE     1    -1\n57 6.851899 5.6323512 5.4112489 5.853454 0.11188695       FALSE     1    -1\n58 6.897468 5.7170393 5.4899007 5.944178 0.11494153       FALSE     1    -1\n59 6.943038 5.8017274 5.5684525 6.035002 0.11804675       FALSE     1    -1\n60 6.988608 5.8864155 5.6469119 6.125919 0.12119872       FALSE     1    -1\n61 7.034177 5.9711035 5.7252860 6.216921 0.12439388       FALSE     1    -1\n62 7.079747 6.0557916 5.8035811 6.308002 0.12762899       FALSE     1    -1\n63 7.125316 6.1404797 5.8818031 6.399156 0.13090109       FALSE     1    -1\n64 7.170886 6.2251678 5.9599574 6.490378 0.13420747       FALSE     1    -1\n65 7.216456 6.3098559 6.0380488 6.581663 0.13754566       FALSE     1    -1\n66 7.262025 6.3945440 6.1160818 6.673006 0.14091339       FALSE     1    -1\n67 7.307595 6.4792321 6.1940606 6.764404 0.14430861       FALSE     1    -1\n68 7.353165 6.5639201 6.2719887 6.855852 0.14772942       FALSE     1    -1\n69 7.398734 6.6486082 6.3498697 6.947347 0.15117407       FALSE     1    -1\n70 7.444304 6.7332963 6.4277068 7.038886 0.15464098       FALSE     1    -1\n71 7.489873 6.8179844 6.5055028 7.130466 0.15812868       FALSE     1    -1\n72 7.535443 6.9026725 6.5832603 7.222085 0.16163582       FALSE     1    -1\n73 7.581013 6.9873606 6.6609818 7.313739 0.16516118       FALSE     1    -1\n74 7.626582 7.0720486 6.7386697 7.405428 0.16870359       FALSE     1    -1\n75 7.672152 7.1567367 6.8163259 7.497148 0.17226202       FALSE     1    -1\n76 7.717722 7.2414248 6.8939523 7.588897 0.17583549       FALSE     1    -1\n77 7.763291 7.3261129 6.9715509 7.680675 0.17942310       FALSE     1    -1\n78 7.808861 7.4108010 7.0491231 7.772479 0.18302403       FALSE     1    -1\n79 7.854430 7.4954891 7.1266705 7.864308 0.18663749       FALSE     1    -1\n80 7.900000 7.5801772 7.2041946 7.956160 0.19026278       FALSE     1    -1\n    colour   fill linewidth linetype weight alpha\n1  #3366FF grey60         1        1      1   0.4\n2  #3366FF grey60         1        1      1   0.4\n3  #3366FF grey60         1        1      1   0.4\n4  #3366FF grey60         1        1      1   0.4\n5  #3366FF grey60         1        1      1   0.4\n6  #3366FF grey60         1        1      1   0.4\n7  #3366FF grey60         1        1      1   0.4\n8  #3366FF grey60         1        1      1   0.4\n9  #3366FF grey60         1        1      1   0.4\n10 #3366FF grey60         1        1      1   0.4\n11 #3366FF grey60         1        1      1   0.4\n12 #3366FF grey60         1        1      1   0.4\n13 #3366FF grey60         1        1      1   0.4\n14 #3366FF grey60         1        1      1   0.4\n15 #3366FF grey60         1        1      1   0.4\n16 #3366FF grey60         1        1      1   0.4\n17 #3366FF grey60         1        1      1   0.4\n18 #3366FF grey60         1        1      1   0.4\n19 #3366FF grey60         1        1      1   0.4\n20 #3366FF grey60         1        1      1   0.4\n21 #3366FF grey60         1        1      1   0.4\n22 #3366FF grey60         1        1      1   0.4\n23 #3366FF grey60         1        1      1   0.4\n24 #3366FF grey60         1        1      1   0.4\n25 #3366FF grey60         1        1      1   0.4\n26 #3366FF grey60         1        1      1   0.4\n27 #3366FF grey60         1        1      1   0.4\n28 #3366FF grey60         1        1      1   0.4\n29 #3366FF grey60         1        1      1   0.4\n30 #3366FF grey60         1        1      1   0.4\n31 #3366FF grey60         1        1      1   0.4\n32 #3366FF grey60         1        1      1   0.4\n33 #3366FF grey60         1        1      1   0.4\n34 #3366FF grey60         1        1      1   0.4\n35 #3366FF grey60         1        1      1   0.4\n36 #3366FF grey60         1        1      1   0.4\n37 #3366FF grey60         1        1      1   0.4\n38 #3366FF grey60         1        1      1   0.4\n39 #3366FF grey60         1        1      1   0.4\n40 #3366FF grey60         1        1      1   0.4\n41 #3366FF grey60         1        1      1   0.4\n42 #3366FF grey60         1        1      1   0.4\n43 #3366FF grey60         1        1      1   0.4\n44 #3366FF grey60         1        1      1   0.4\n45 #3366FF grey60         1        1      1   0.4\n46 #3366FF grey60         1        1      1   0.4\n47 #3366FF grey60         1        1      1   0.4\n48 #3366FF grey60         1        1      1   0.4\n49 #3366FF grey60         1        1      1   0.4\n50 #3366FF grey60         1        1      1   0.4\n51 #3366FF grey60         1        1      1   0.4\n52 #3366FF grey60         1        1      1   0.4\n53 #3366FF grey60         1        1      1   0.4\n54 #3366FF grey60         1        1      1   0.4\n55 #3366FF grey60         1        1      1   0.4\n56 #3366FF grey60         1        1      1   0.4\n57 #3366FF grey60         1        1      1   0.4\n58 #3366FF grey60         1        1      1   0.4\n59 #3366FF grey60         1        1      1   0.4\n60 #3366FF grey60         1        1      1   0.4\n61 #3366FF grey60         1        1      1   0.4\n62 #3366FF grey60         1        1      1   0.4\n63 #3366FF grey60         1        1      1   0.4\n64 #3366FF grey60         1        1      1   0.4\n65 #3366FF grey60         1        1      1   0.4\n66 #3366FF grey60         1        1      1   0.4\n67 #3366FF grey60         1        1      1   0.4\n68 #3366FF grey60         1        1      1   0.4\n69 #3366FF grey60         1        1      1   0.4\n70 #3366FF grey60         1        1      1   0.4\n71 #3366FF grey60         1        1      1   0.4\n72 #3366FF grey60         1        1      1   0.4\n73 #3366FF grey60         1        1      1   0.4\n74 #3366FF grey60         1        1      1   0.4\n75 #3366FF grey60         1        1      1   0.4\n76 #3366FF grey60         1        1      1   0.4\n77 #3366FF grey60         1        1      1   0.4\n78 #3366FF grey60         1        1      1   0.4\n79 #3366FF grey60         1        1      1   0.4\n80 #3366FF grey60         1        1      1   0.4\n\n\n\n\n\n\n ggplot(data = iris)+\ngeom_density(aes(x = Sepal.Length, fill = \"Sepal.Length\"))\n\n\n\n\n\n\n\nggplot(data = iris)+\ngeom_density(aes(x = Sepal.Length, fill = \"Sepal.Length\"))+\ngeom_density(aes(x = Sepal.Width, fill = \"Sepal.Width\"))\n\n\n\n\n\n\n\n\nggplot(data = iris)+\ngeom_density(aes(x = Sepal.Length, fill = \"Sepal.Length\"))+\ngeom_density(aes(x = Sepal.Width, fill = \"Sepal.Width\"))+\ngeom_density(aes(x = Petal.Width, fill = \"Petal.Width\"))\n\n\n\n\n\n\n\n\nggplot(data = iris)+\ngeom_density(aes(x = Sepal.Length, fill = \"Sepal.Length\"), alpha=0.4,color=NA)+\ngeom_density(aes(x = Sepal.Width, fill = \"Sepal.Width\"), alpha=0.4,color=NA)+\ngeom_density(aes(x = Petal.Width, fill = \"Petal.Width\"), alpha=0.4,color=NA)+\ngeom_density(aes(x = Petal.Length, fill = \"Petal.Length\"), alpha=0.4,color=NA)+\nlabs(x=\"cm\", y=\"Fréquence\")\n\n\n\n\n\n\n\n\n\nlibrary(dplyr)\n\nWarning: le package 'dplyr' a été compilé avec la version R 4.1.2\n\n\n\nAttachement du package : 'dplyr'\n\n\nLes objets suivants sont masqués depuis 'package:stats':\n\n    filter, lag\n\n\nLes objets suivants sont masqués depuis 'package:base':\n\n    intersect, setdiff, setequal, union\n\nmy_df&lt;-iris %&gt;%\n  dplyr::group_by(Species)%&gt;%\n  dplyr::summarise(moyenne=mean(Sepal.Length, na.rm=TRUE), sd=sd(Sepal.Length, na.rm=TRUE))\n\nmy_df&lt;-as.data.frame(my_df)\n\nggplot(data = my_df, aes(Species, moyenne))+# scatter plot\n  geom_col(aes(color= Species, fill=Species))+\n  labs(x=\"Species\", y=\"Sepal.Length (mm)\")+\n  geom_errorbar(aes(ymin = moyenne-sd, ymax = moyenne+sd), width=0.2)\n\n\n\n\n\n\n\n\nggplot(data = iris, aes(Species, Sepal.Length))+ \n  geom_boxplot()+\n  labs(x=\"Species\", y=\"Sepal.Length (mm)\")+\n  theme_minimal()\n\n\n\n\n\n\n\nggplot(data = iris, aes(Species, Sepal.Length))+\n  geom_boxplot(aes(color=Species, fill=Species), alpha=0.4)+\n  labs(x=\"Species\", y=\"Sepal.Length (mm)\")+\n  theme_minimal()\n\n\n\n\n\n\n\n\nggplot(data = iris, aes(Species, Sepal.Length))+\n  geom_boxplot(aes(color=Species, fill=Species), alpha=0.4)+\n  geom_jitter(aes(colour = Species), position = position_jitter(0.07), cex = 2.2)+\n  labs(x=\"Species\", y=\"Sepal.Length (mm)\")+\n  theme_minimal()\n\n\n\n\n\n\n\n\nggplot(data=iris, aes(x=Species, y=Sepal.Length))+\ngeom_boxplot(aes(fill=Species,col=Species),alpha=0.6)+\nlabs(x=\"Species\",y=\"Sepal Length\", title=\"Iris Boxplot\")+\nstat_summary(fun=mean, geom=\"point\", shape=5, col=\"white\", size=3) \n\n\n\n\n\n\n\n\nNotez Densité à travers des contours lignes\n\nggplot(data=iris,aes(x=Sepal.Width,y=Sepal.Length, color=Species))+ \ngeom_density2d()\n\n\n\n\n\n\n\nggplot(data=iris,aes(x=Sepal.Width,y=Sepal.Length, color=Species)) +\ngeom_point()+\ngeom_density2d()\n\n\n\n\nSave your plot\n\npdf(\"yourfile.pdf\")\nggplot(data = iris, aes(Species, Sepal.Length))+\n  geom_boxplot(aes(color=Species, fill=Species), alpha=0.4)+\n  geom_jitter(aes(colour = Species), position = position_jitter(0.07), cex = 2.2)+\n  labs(x=\"Species\", y=\"Sepal.Length (mm)\")+\n  theme_minimal()\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\n\n\n\nFor this, we will use facet_wrap option on iris data\n\nggplot(data = iris, aes(Sepal.Length,Petal.Length))+\n  geom_point(aes(shape = Species))+\n  facet_wrap(~Species, scales = \"free\")\n\n\n\n\n\n\n\nIf not installed, you have to install it and load it\n\np4&lt;-ggplot(data = iris, aes(Species, Sepal.Length))+\n  geom_boxplot(aes(color=Species, fill=Species), alpha=0.4)+\n  geom_jitter(aes(colour = Species), position = position_jitter(0.07), cex = 2.2)+\n  labs(x=\"Species\", y=\"Sepal.Length (mm)\")+\n  theme_minimal()\n\nplotly::ggplotly(p4, height = 350, width=800)\n\n\n\n\n\nExo 1\n\nRead the data set mapfileFa.txt\nGive me the structure of the data set, and explore the data set. Dimension of the data set ? What kind of variable do you have?\nGive me the distribution Chlorophyl and Nanoeukaryote using ggplot and geom_boxplot() colored by the geography. Using the package patchwork (https://cran.r-project.org/web/packages/patchwork/vignettes/patchwork.html) build figure with these two on a same pages and save it as pdf\nAdd a variable into the data frame as the ratio between NT and PT. Build a scatter of the ratio NT/PT as a function sample name and sort by geography using facet_wrap function. Change x and y label as Sample Name and Ratio NR/TP. Give a title at your figure.\nGroup dataset by the geopgraphy ,calclulate the mean and the sd of the nbr of Crypto. Build a bar plot with mean and error bar (sd) colored according to the geography and save the plot\n\nSave figure as pdf\nFilter South data in a new data frame. Build a scatter plot, with size of shape = 3 and color = red. Add a trend curve.\nDo the the same for northern site."
  },
  {
    "objectID": "Graph.html#i-use-of-ggplot-packages-to-perform-smart-plot",
    "href": "Graph.html#i-use-of-ggplot-packages-to-perform-smart-plot",
    "title": "Graph",
    "section": "",
    "text": "ggplot2 is a powerfull packages to make a very smart graph “ready to use” for publication. gg means grammar and graph, a concept which describe a graph using grammar. This package belong to tidyverse according to “dplyr”. According to the ggplot2 concept, a graph can be divided into different basic parts:Plot = data + Aesthetics + Geometry\n\ndata : data frame\naesthetics : allows to indicate the x and y variables. It can also be used to control the color, size and shape of the points, etc…\ngeometry : corresponds to the type of graph (histogram, box plot, line plot, …..)\n\n\n\n\n\n\n# if not alraedy done load library ggplot2\nlibrary(ggplot2)\n\nWarning: le package 'ggplot2' a été compilé avec la version R 4.1.2\n\ndata(iris)\nggplot(data = iris, aes(Sepal.Length, Sepal.Width))+ # scatter plot \n  geom_point()\n\n\n\n\n\n\n\n\nggplot(data = iris, aes(Sepal.Length, Sepal.Width))+ # scatter plot \n  geom_line()\n\n\n\n\n\n\n\n\n\n\n\n# Change size, color and shape in a scatter plot \nggplot(data = iris, aes(Sepal.Length, Sepal.Width))+ # scatter plot \n  geom_point(size=3, color =\"steelblue\", shape=21)  # shape is the same thing wiht classical plot on R\n\n\n\n\n\n\n\n\n\n\n# We can calorize and give a shape by month \nggplot(data = iris, aes(Sepal.Length, Sepal.Width))+ # scatter plot \n  geom_point(aes(color = Species, shape = Species)) # shape is the same thing with classical plot on R\n\n\n\n\n\n\n\nBe carefull alpha option is for transparency and ranged between 0 and 1\n\nggplot(data = iris, aes(Sepal.Width,Sepal.Length))+  \ngeom_point(aes(color = Petal.Width, shape = Species), size = 2,alpha=(0.8))\n\n\n\n\nWhat kind of conclusion we can give me with this kind of graph?\n\n\n\n\n\nggplot(data = iris, aes(Sepal.Width,Sepal.Length))+  \ngeom_point(aes(color = Petal.Width, shape = Species), size = 2,alpha=(0.8))+\nscale_color_gradient(low = \"yellow\", high = \"red\")\n\n\n\n\n\n\n\n# You can change manually color with la fonction scale_color_manual()\nggplot(data = iris, aes(Sepal.Length, Sepal.Width))+ # scatter plot \n geom_point(aes(color = Species, shape = Species))  +\n  scale_color_manual(values = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n\n\n\n#You can store your plot in a variable to print later \np&lt;-ggplot(data = iris, aes(Sepal.Length, Sepal.Width))+ # scatter plot \n geom_point(aes(color = Species, shape = Species))  +\n  scale_color_manual(values = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))+\n  theme_minimal()\n  \n\nprint(p)\n\n\n\n\nWhat do you see if you play the following command : names(p)?\n\n\n\n\n\n#To arrange the graph we can add some label and change the position of the legend\np + theme(legend.position = \"top\")\n\n\n\np + labs(color = \"Species\", shape= \"Sepcies\",\n  title = \"Sepal Length for each speices\",\n  subtitle = \"is a data frame with 150 cases (rows) and 5 variables\",\n  x = \"Sepal.Length (mm)\", y = \"Sepal.Width (mm)\"\n  )\n\n\n\n\n\n\n\n\np2&lt;-ggplot(data = iris, aes(Sepal.Length,Petal.Length))+ # scatter plot \n  geom_point(size=3, color =\"steelblue\") +\n  stat_smooth(method=lm, se=TRUE, na.rm=TRUE, show.legend = TRUE)\np2 + labs(x = \"Sepal.Length (mm)\", y = \"Pepal.Length (mm)\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nTo get data from the trend\n\nggplot_build(p2)$data[[2]]\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n          x         y      ymin     ymax         se flipped_aes PANEL group\n1  4.300000 0.8898184 0.5928870 1.186750 0.15025965       FALSE     1    -1\n2  4.345570 0.9745065 0.6843700 1.264643 0.14682115       FALSE     1    -1\n3  4.391139 1.0591946 0.7758049 1.342584 0.14340694       FALSE     1    -1\n4  4.436709 1.1438827 0.8671884 1.420577 0.14001881       FALSE     1    -1\n5  4.482278 1.2285708 0.9585165 1.498625 0.13665869       FALSE     1    -1\n6  4.527848 1.3132589 1.0497850 1.576733 0.13332869       FALSE     1    -1\n7  4.573418 1.3979469 1.1409895 1.654904 0.13003114       FALSE     1    -1\n8  4.618987 1.4826350 1.2321248 1.733145 0.12676857       FALSE     1    -1\n9  4.664557 1.5673231 1.3231856 1.811461 0.12354374       FALSE     1    -1\n10 4.710127 1.6520112 1.4141657 1.889857 0.12035969       FALSE     1    -1\n11 4.755696 1.7366993 1.5050587 1.968340 0.11721974       FALSE     1    -1\n12 4.801266 1.8213874 1.5958574 2.046917 0.11412754       FALSE     1    -1\n13 4.846835 1.9060755 1.6865538 2.125597 0.11108706       FALSE     1    -1\n14 4.892405 1.9907635 1.7771394 2.204388 0.10810268       FALSE     1    -1\n15 4.937975 2.0754516 1.8676047 2.283299 0.10517918       FALSE     1    -1\n16 4.983544 2.1601397 1.9579394 2.362340 0.10232176       FALSE     1    -1\n17 5.029114 2.2448278 2.0481322 2.441523 0.09953612       FALSE     1    -1\n18 5.074684 2.3295159 2.1381710 2.520861 0.09682845       FALSE     1    -1\n19 5.120253 2.4142040 2.2280424 2.600366 0.09420548       FALSE     1    -1\n20 5.165823 2.4988921 2.3177320 2.680052 0.09167449       FALSE     1    -1\n21 5.211392 2.5835801 2.4072245 2.759936 0.08924328       FALSE     1    -1\n22 5.256962 2.6682682 2.4965032 2.840033 0.08692025       FALSE     1    -1\n23 5.302532 2.7529563 2.5855505 2.920362 0.08471428       FALSE     1    -1\n24 5.348101 2.8376444 2.6743480 3.000941 0.08263476       FALSE     1    -1\n25 5.393671 2.9223325 2.7628763 3.081789 0.08069145       FALSE     1    -1\n26 5.439241 3.0070206 2.8511155 3.162926 0.07889444       FALSE     1    -1\n27 5.484810 3.0917086 2.9390454 3.244372 0.07725392       FALSE     1    -1\n28 5.530380 3.1763967 3.0266461 3.326147 0.07578006       FALSE     1    -1\n29 5.575949 3.2610848 3.1138978 3.408272 0.07448275       FALSE     1    -1\n30 5.621519 3.3457729 3.2007821 3.490764 0.07337136       FALSE     1    -1\n31 5.667089 3.4304610 3.2872821 3.573640 0.07245446       FALSE     1    -1\n32 5.712658 3.5151491 3.3733831 3.656915 0.07173948       FALSE     1    -1\n33 5.758228 3.5998372 3.4590730 3.740601 0.07123252       FALSE     1    -1\n34 5.803797 3.6845252 3.5443430 3.824707 0.07093803       FALSE     1    -1\n35 5.849367 3.7692133 3.6291879 3.909239 0.07085867       FALSE     1    -1\n36 5.894937 3.8539014 3.7136063 3.994197 0.07099515       FALSE     1    -1\n37 5.940506 3.9385895 3.7976006 4.079578 0.07134624       FALSE     1    -1\n38 5.986076 4.0232776 3.8811770 4.165378 0.07190879       FALSE     1    -1\n39 6.031646 4.1079657 3.9643453 4.251586 0.07267789       FALSE     1    -1\n40 6.077215 4.1926538 4.0471181 4.338189 0.07364708       FALSE     1    -1\n41 6.122785 4.2773418 4.1295109 4.425173 0.07480857       FALSE     1    -1\n42 6.168354 4.3620299 4.2115411 4.512519 0.07615357       FALSE     1    -1\n43 6.213924 4.4467180 4.2932276 4.600208 0.07767254       FALSE     1    -1\n44 6.259494 4.5314061 4.3745899 4.688222 0.07935550       FALSE     1    -1\n45 6.305063 4.6160942 4.4556484 4.776540 0.08119225       FALSE     1    -1\n46 6.350633 4.7007823 4.5364230 4.865141 0.08317259       FALSE     1    -1\n47 6.396203 4.7854704 4.6169337 4.954007 0.08528654       FALSE     1    -1\n48 6.441772 4.8701584 4.6971995 5.043117 0.08752440       FALSE     1    -1\n49 6.487342 4.9548465 4.7772387 5.132454 0.08987692       FALSE     1    -1\n50 6.532911 5.0395346 4.8570686 5.222001 0.09233535       FALSE     1    -1\n51 6.578481 5.1242227 4.9367056 5.311740 0.09489144       FALSE     1    -1\n52 6.624051 5.2089108 5.0161647 5.401657 0.09753752       FALSE     1    -1\n53 6.669620 5.2935989 5.0954600 5.491738 0.10026647       FALSE     1    -1\n54 6.715190 5.3782869 5.1746046 5.581969 0.10307170       FALSE     1    -1\n55 6.760759 5.4629750 5.2536105 5.672340 0.10594715       FALSE     1    -1\n56 6.806329 5.5476631 5.3324885 5.762838 0.10888727       FALSE     1    -1\n57 6.851899 5.6323512 5.4112489 5.853454 0.11188695       FALSE     1    -1\n58 6.897468 5.7170393 5.4899007 5.944178 0.11494153       FALSE     1    -1\n59 6.943038 5.8017274 5.5684525 6.035002 0.11804675       FALSE     1    -1\n60 6.988608 5.8864155 5.6469119 6.125919 0.12119872       FALSE     1    -1\n61 7.034177 5.9711035 5.7252860 6.216921 0.12439388       FALSE     1    -1\n62 7.079747 6.0557916 5.8035811 6.308002 0.12762899       FALSE     1    -1\n63 7.125316 6.1404797 5.8818031 6.399156 0.13090109       FALSE     1    -1\n64 7.170886 6.2251678 5.9599574 6.490378 0.13420747       FALSE     1    -1\n65 7.216456 6.3098559 6.0380488 6.581663 0.13754566       FALSE     1    -1\n66 7.262025 6.3945440 6.1160818 6.673006 0.14091339       FALSE     1    -1\n67 7.307595 6.4792321 6.1940606 6.764404 0.14430861       FALSE     1    -1\n68 7.353165 6.5639201 6.2719887 6.855852 0.14772942       FALSE     1    -1\n69 7.398734 6.6486082 6.3498697 6.947347 0.15117407       FALSE     1    -1\n70 7.444304 6.7332963 6.4277068 7.038886 0.15464098       FALSE     1    -1\n71 7.489873 6.8179844 6.5055028 7.130466 0.15812868       FALSE     1    -1\n72 7.535443 6.9026725 6.5832603 7.222085 0.16163582       FALSE     1    -1\n73 7.581013 6.9873606 6.6609818 7.313739 0.16516118       FALSE     1    -1\n74 7.626582 7.0720486 6.7386697 7.405428 0.16870359       FALSE     1    -1\n75 7.672152 7.1567367 6.8163259 7.497148 0.17226202       FALSE     1    -1\n76 7.717722 7.2414248 6.8939523 7.588897 0.17583549       FALSE     1    -1\n77 7.763291 7.3261129 6.9715509 7.680675 0.17942310       FALSE     1    -1\n78 7.808861 7.4108010 7.0491231 7.772479 0.18302403       FALSE     1    -1\n79 7.854430 7.4954891 7.1266705 7.864308 0.18663749       FALSE     1    -1\n80 7.900000 7.5801772 7.2041946 7.956160 0.19026278       FALSE     1    -1\n    colour   fill linewidth linetype weight alpha\n1  #3366FF grey60         1        1      1   0.4\n2  #3366FF grey60         1        1      1   0.4\n3  #3366FF grey60         1        1      1   0.4\n4  #3366FF grey60         1        1      1   0.4\n5  #3366FF grey60         1        1      1   0.4\n6  #3366FF grey60         1        1      1   0.4\n7  #3366FF grey60         1        1      1   0.4\n8  #3366FF grey60         1        1      1   0.4\n9  #3366FF grey60         1        1      1   0.4\n10 #3366FF grey60         1        1      1   0.4\n11 #3366FF grey60         1        1      1   0.4\n12 #3366FF grey60         1        1      1   0.4\n13 #3366FF grey60         1        1      1   0.4\n14 #3366FF grey60         1        1      1   0.4\n15 #3366FF grey60         1        1      1   0.4\n16 #3366FF grey60         1        1      1   0.4\n17 #3366FF grey60         1        1      1   0.4\n18 #3366FF grey60         1        1      1   0.4\n19 #3366FF grey60         1        1      1   0.4\n20 #3366FF grey60         1        1      1   0.4\n21 #3366FF grey60         1        1      1   0.4\n22 #3366FF grey60         1        1      1   0.4\n23 #3366FF grey60         1        1      1   0.4\n24 #3366FF grey60         1        1      1   0.4\n25 #3366FF grey60         1        1      1   0.4\n26 #3366FF grey60         1        1      1   0.4\n27 #3366FF grey60         1        1      1   0.4\n28 #3366FF grey60         1        1      1   0.4\n29 #3366FF grey60         1        1      1   0.4\n30 #3366FF grey60         1        1      1   0.4\n31 #3366FF grey60         1        1      1   0.4\n32 #3366FF grey60         1        1      1   0.4\n33 #3366FF grey60         1        1      1   0.4\n34 #3366FF grey60         1        1      1   0.4\n35 #3366FF grey60         1        1      1   0.4\n36 #3366FF grey60         1        1      1   0.4\n37 #3366FF grey60         1        1      1   0.4\n38 #3366FF grey60         1        1      1   0.4\n39 #3366FF grey60         1        1      1   0.4\n40 #3366FF grey60         1        1      1   0.4\n41 #3366FF grey60         1        1      1   0.4\n42 #3366FF grey60         1        1      1   0.4\n43 #3366FF grey60         1        1      1   0.4\n44 #3366FF grey60         1        1      1   0.4\n45 #3366FF grey60         1        1      1   0.4\n46 #3366FF grey60         1        1      1   0.4\n47 #3366FF grey60         1        1      1   0.4\n48 #3366FF grey60         1        1      1   0.4\n49 #3366FF grey60         1        1      1   0.4\n50 #3366FF grey60         1        1      1   0.4\n51 #3366FF grey60         1        1      1   0.4\n52 #3366FF grey60         1        1      1   0.4\n53 #3366FF grey60         1        1      1   0.4\n54 #3366FF grey60         1        1      1   0.4\n55 #3366FF grey60         1        1      1   0.4\n56 #3366FF grey60         1        1      1   0.4\n57 #3366FF grey60         1        1      1   0.4\n58 #3366FF grey60         1        1      1   0.4\n59 #3366FF grey60         1        1      1   0.4\n60 #3366FF grey60         1        1      1   0.4\n61 #3366FF grey60         1        1      1   0.4\n62 #3366FF grey60         1        1      1   0.4\n63 #3366FF grey60         1        1      1   0.4\n64 #3366FF grey60         1        1      1   0.4\n65 #3366FF grey60         1        1      1   0.4\n66 #3366FF grey60         1        1      1   0.4\n67 #3366FF grey60         1        1      1   0.4\n68 #3366FF grey60         1        1      1   0.4\n69 #3366FF grey60         1        1      1   0.4\n70 #3366FF grey60         1        1      1   0.4\n71 #3366FF grey60         1        1      1   0.4\n72 #3366FF grey60         1        1      1   0.4\n73 #3366FF grey60         1        1      1   0.4\n74 #3366FF grey60         1        1      1   0.4\n75 #3366FF grey60         1        1      1   0.4\n76 #3366FF grey60         1        1      1   0.4\n77 #3366FF grey60         1        1      1   0.4\n78 #3366FF grey60         1        1      1   0.4\n79 #3366FF grey60         1        1      1   0.4\n80 #3366FF grey60         1        1      1   0.4\n\n\n\n\n\n\n ggplot(data = iris)+\ngeom_density(aes(x = Sepal.Length, fill = \"Sepal.Length\"))\n\n\n\n\n\n\n\nggplot(data = iris)+\ngeom_density(aes(x = Sepal.Length, fill = \"Sepal.Length\"))+\ngeom_density(aes(x = Sepal.Width, fill = \"Sepal.Width\"))\n\n\n\n\n\n\n\n\nggplot(data = iris)+\ngeom_density(aes(x = Sepal.Length, fill = \"Sepal.Length\"))+\ngeom_density(aes(x = Sepal.Width, fill = \"Sepal.Width\"))+\ngeom_density(aes(x = Petal.Width, fill = \"Petal.Width\"))\n\n\n\n\n\n\n\n\nggplot(data = iris)+\ngeom_density(aes(x = Sepal.Length, fill = \"Sepal.Length\"), alpha=0.4,color=NA)+\ngeom_density(aes(x = Sepal.Width, fill = \"Sepal.Width\"), alpha=0.4,color=NA)+\ngeom_density(aes(x = Petal.Width, fill = \"Petal.Width\"), alpha=0.4,color=NA)+\ngeom_density(aes(x = Petal.Length, fill = \"Petal.Length\"), alpha=0.4,color=NA)+\nlabs(x=\"cm\", y=\"Fréquence\")\n\n\n\n\n\n\n\n\n\nlibrary(dplyr)\n\nWarning: le package 'dplyr' a été compilé avec la version R 4.1.2\n\n\n\nAttachement du package : 'dplyr'\n\n\nLes objets suivants sont masqués depuis 'package:stats':\n\n    filter, lag\n\n\nLes objets suivants sont masqués depuis 'package:base':\n\n    intersect, setdiff, setequal, union\n\nmy_df&lt;-iris %&gt;%\n  dplyr::group_by(Species)%&gt;%\n  dplyr::summarise(moyenne=mean(Sepal.Length, na.rm=TRUE), sd=sd(Sepal.Length, na.rm=TRUE))\n\nmy_df&lt;-as.data.frame(my_df)\n\nggplot(data = my_df, aes(Species, moyenne))+# scatter plot\n  geom_col(aes(color= Species, fill=Species))+\n  labs(x=\"Species\", y=\"Sepal.Length (mm)\")+\n  geom_errorbar(aes(ymin = moyenne-sd, ymax = moyenne+sd), width=0.2)\n\n\n\n\n\n\n\n\nggplot(data = iris, aes(Species, Sepal.Length))+ \n  geom_boxplot()+\n  labs(x=\"Species\", y=\"Sepal.Length (mm)\")+\n  theme_minimal()\n\n\n\n\n\n\n\nggplot(data = iris, aes(Species, Sepal.Length))+\n  geom_boxplot(aes(color=Species, fill=Species), alpha=0.4)+\n  labs(x=\"Species\", y=\"Sepal.Length (mm)\")+\n  theme_minimal()\n\n\n\n\n\n\n\n\nggplot(data = iris, aes(Species, Sepal.Length))+\n  geom_boxplot(aes(color=Species, fill=Species), alpha=0.4)+\n  geom_jitter(aes(colour = Species), position = position_jitter(0.07), cex = 2.2)+\n  labs(x=\"Species\", y=\"Sepal.Length (mm)\")+\n  theme_minimal()\n\n\n\n\n\n\n\n\nggplot(data=iris, aes(x=Species, y=Sepal.Length))+\ngeom_boxplot(aes(fill=Species,col=Species),alpha=0.6)+\nlabs(x=\"Species\",y=\"Sepal Length\", title=\"Iris Boxplot\")+\nstat_summary(fun=mean, geom=\"point\", shape=5, col=\"white\", size=3) \n\n\n\n\n\n\n\n\nNotez Densité à travers des contours lignes\n\nggplot(data=iris,aes(x=Sepal.Width,y=Sepal.Length, color=Species))+ \ngeom_density2d()\n\n\n\n\n\n\n\nggplot(data=iris,aes(x=Sepal.Width,y=Sepal.Length, color=Species)) +\ngeom_point()+\ngeom_density2d()\n\n\n\n\nSave your plot\n\npdf(\"yourfile.pdf\")\nggplot(data = iris, aes(Species, Sepal.Length))+\n  geom_boxplot(aes(color=Species, fill=Species), alpha=0.4)+\n  geom_jitter(aes(colour = Species), position = position_jitter(0.07), cex = 2.2)+\n  labs(x=\"Species\", y=\"Sepal.Length (mm)\")+\n  theme_minimal()\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\n\n\n\nFor this, we will use facet_wrap option on iris data\n\nggplot(data = iris, aes(Sepal.Length,Petal.Length))+\n  geom_point(aes(shape = Species))+\n  facet_wrap(~Species, scales = \"free\")\n\n\n\n\n\n\n\nIf not installed, you have to install it and load it\n\np4&lt;-ggplot(data = iris, aes(Species, Sepal.Length))+\n  geom_boxplot(aes(color=Species, fill=Species), alpha=0.4)+\n  geom_jitter(aes(colour = Species), position = position_jitter(0.07), cex = 2.2)+\n  labs(x=\"Species\", y=\"Sepal.Length (mm)\")+\n  theme_minimal()\n\nplotly::ggplotly(p4, height = 350, width=800)\n\n\n\n\n\nExo 1\n\nRead the data set mapfileFa.txt\nGive me the structure of the data set, and explore the data set. Dimension of the data set ? What kind of variable do you have?\nGive me the distribution Chlorophyl and Nanoeukaryote using ggplot and geom_boxplot() colored by the geography. Using the package patchwork (https://cran.r-project.org/web/packages/patchwork/vignettes/patchwork.html) build figure with these two on a same pages and save it as pdf\nAdd a variable into the data frame as the ratio between NT and PT. Build a scatter of the ratio NT/PT as a function sample name and sort by geography using facet_wrap function. Change x and y label as Sample Name and Ratio NR/TP. Give a title at your figure.\nGroup dataset by the geopgraphy ,calclulate the mean and the sd of the nbr of Crypto. Build a bar plot with mean and error bar (sd) colored according to the geography and save the plot\n\nSave figure as pdf\nFilter South data in a new data frame. Build a scatter plot, with size of shape = 3 and color = red. Add a trend curve.\nDo the the same for northern site."
  },
  {
    "objectID": "Graph.html#ii-package-escquisse",
    "href": "Graph.html#ii-package-escquisse",
    "title": "Graph",
    "section": "II-Package Escquisse",
    "text": "II-Package Escquisse\nEsquisse is a web application to build easily a ggplot giving commande line to customize it. . Also, it is export graph as a picture or pdf"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "quarto2",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "Test.html",
    "href": "Test.html",
    "title": "Test",
    "section": "",
    "text": "plot(cars)"
  },
  {
    "objectID": "Test.html#hello-world",
    "href": "Test.html#hello-world",
    "title": "Test",
    "section": "",
    "text": "plot(cars)"
  },
  {
    "objectID": "Test.html#cest-trop-cool",
    "href": "Test.html#cest-trop-cool",
    "title": "Test",
    "section": "C’est trop cool",
    "text": "C’est trop cool\n\n\n\n\n\n\nWarning\n\n\n\nNote that there are five types of callouts, including: note, tip, warning, caution, and important."
  }
]